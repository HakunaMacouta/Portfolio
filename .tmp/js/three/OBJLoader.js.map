{"version":3,"sources":["three/OBJLoader.js"],"names":["THREE","OBJLoader","object_pattern","material_library_pattern","material_use_pattern","ParserState","state","objects","object","vertices","normals","colors","uvs","materialLibraries","startObject","name","fromDeclaration","previousMaterial","currentMaterial","undefined","_finalize","geometry","materials","smooth","startMaterial","libraries","previous","inherited","groupCount","splice","index","material","length","mtllib","Array","isArray","groupStart","groupEnd","clone","cloned","bind","push","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","value","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","src","dst","addVertexLine","addNormal","addColor","addUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","uvLen","nLen","addLineGeometry","type","vi","l","uvi","manager","DefaultLoadingManager","prototype","constructor","load","url","onLoad","onProgress","onError","scope","loader","FileLoader","setPath","path","text","parse","setMaterials","console","time","indexOf","replace","lines","split","line","lineFirstChar","lineLength","result","trimLeft","i","trim","charAt","data","parseFloat","lineData","substr","vertexData","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","substring","lineVertices","lineUVs","li","llen","parts","exec","test","toLowerCase","Error","container","Group","concat","isLine","buffergeometry","BufferGeometry","addAttribute","Float32BufferAttribute","computeVertexNormals","createdMaterials","miLen","sourceMaterial","create","LineBasicMaterial","materialLine","copy","MeshPhongMaterial","flatShading","mesh","addGroup","Mesh","LineSegments","add","timeEnd"],"mappings":";;AAAA;;;;AAIAA,MAAMC,SAAN,GAAoB,YAAY;;AAE5B;AACA,QAAIC,iBAAiB,eAArB;AACA;AACA,QAAIC,2BAA2B,UAA/B;AACA;AACA,QAAIC,uBAAuB,UAA3B;;AAEA,aAASC,WAAT,GAAuB;;AAEnB,YAAIC,QAAQ;AACRC,qBAAS,EADD;AAERC,oBAAQ,EAFA;;AAIRC,sBAAU,EAJF;AAKRC,qBAAS,EALD;AAMRC,oBAAQ,EANA;AAORC,iBAAK,EAPG;;AASRC,+BAAmB,EATX;;AAWRC,yBAAa,qBAAWC,IAAX,EAAiBC,eAAjB,EAAmC;;AAE5C;AACA;AACA,oBAAK,KAAKR,MAAL,IAAe,KAAKA,MAAL,CAAYQ,eAAZ,KAAgC,KAApD,EAA4D;;AAExD,yBAAKR,MAAL,CAAYO,IAAZ,GAAmBA,IAAnB;AACA,yBAAKP,MAAL,CAAYQ,eAAZ,GAAgCA,oBAAoB,KAApD;AACA;AAEH;;AAED,oBAAIC,mBAAqB,KAAKT,MAAL,IAAe,OAAO,KAAKA,MAAL,CAAYU,eAAnB,KAAuC,UAAtD,GAAmE,KAAKV,MAAL,CAAYU,eAAZ,EAAnE,GAAmGC,SAA5H;;AAEA,oBAAK,KAAKX,MAAL,IAAe,OAAO,KAAKA,MAAL,CAAYY,SAAnB,KAAiC,UAArD,EAAkE;;AAE9D,yBAAKZ,MAAL,CAAYY,SAAZ,CAAuB,IAAvB;AAEH;;AAED,qBAAKZ,MAAL,GAAc;AACVO,0BAAMA,QAAQ,EADJ;AAEVC,qCAAmBA,oBAAoB,KAF7B;;AAIVK,8BAAU;AACNZ,kCAAU,EADJ;AAENC,iCAAS,EAFH;AAGNC,gCAAQ,EAHF;AAINC,6BAAK;AAJC,qBAJA;AAUVU,+BAAW,EAVD;AAWVC,4BAAQ,IAXE;;AAaVC,mCAAe,uBAAWT,IAAX,EAAiBU,SAAjB,EAA6B;;AAExC,4BAAIC,WAAW,KAAKN,SAAL,CAAgB,KAAhB,CAAf;;AAEA;AACA;AACA,4BAAKM,aAAcA,SAASC,SAAT,IAAsBD,SAASE,UAAT,IAAuB,CAA3D,CAAL,EAAsE;;AAElE,iCAAKN,SAAL,CAAeO,MAAf,CAAuBH,SAASI,KAAhC,EAAuC,CAAvC;AAEH;;AAED,4BAAIC,WAAW;AACXD,mCAAO,KAAKR,SAAL,CAAeU,MADX;AAEXjB,kCAAMA,QAAQ,EAFH;AAGXkB,oCAAUC,MAAMC,OAAN,CAAeV,SAAf,KAA8BA,UAAUO,MAAV,GAAmB,CAAjD,GAAqDP,UAAWA,UAAUO,MAAV,GAAmB,CAA9B,CAArD,GAAyF,EAHxF;AAIXT,oCAAUG,aAAaP,SAAb,GAAyBO,SAASH,MAAlC,GAA2C,KAAKA,MAJ/C;AAKXa,wCAAcV,aAAaP,SAAb,GAAyBO,SAASW,QAAlC,GAA6C,CALhD;AAMXA,sCAAU,CAAE,CAND;AAOXT,wCAAY,CAAE,CAPH;AAQXD,uCAAW,KARA;;AAUXW,mCAAO,eAAWR,KAAX,EAAmB;;AAEtB,oCAAIS,SAAS;AACTT,2CAAS,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoC,KAAKA,KADzC;AAETf,0CAAM,KAAKA,IAFF;AAGTkB,4CAAQ,KAAKA,MAHJ;AAITV,4CAAQ,KAAKA,MAJJ;AAKTa,gDAAY,CALH;AAMTC,8CAAU,CAAE,CANH;AAOTT,gDAAY,CAAE,CAPL;AAQTD,+CAAW;AARF,iCAAb;AAUAY,uCAAOD,KAAP,GAAe,KAAKA,KAAL,CAAWE,IAAX,CAAiBD,MAAjB,CAAf;AACA,uCAAOA,MAAP;AAEH;AAzBU,yBAAf;;AA4BA,6BAAKjB,SAAL,CAAemB,IAAf,CAAqBV,QAArB;;AAEA,+BAAOA,QAAP;AAEH,qBAzDS;;AA2DVb,qCAAiB,2BAAY;;AAEzB,4BAAK,KAAKI,SAAL,CAAeU,MAAf,GAAwB,CAA7B,EAAiC;;AAE7B,mCAAO,KAAKV,SAAL,CAAgB,KAAKA,SAAL,CAAeU,MAAf,GAAwB,CAAxC,CAAP;AAEH;;AAED,+BAAOb,SAAP;AAEH,qBArES;;AAuEVC,+BAAW,mBAAWsB,GAAX,EAAiB;;AAExB,4BAAIC,oBAAoB,KAAKzB,eAAL,EAAxB;AACA,4BAAKyB,qBAAqBA,kBAAkBN,QAAlB,KAA+B,CAAE,CAA3D,EAA+D;;AAE3DM,8CAAkBN,QAAlB,GAA6B,KAAKhB,QAAL,CAAcZ,QAAd,CAAuBuB,MAAvB,GAAgC,CAA7D;AACAW,8CAAkBf,UAAlB,GAA+Be,kBAAkBN,QAAlB,GAA6BM,kBAAkBP,UAA9E;AACAO,8CAAkBhB,SAAlB,GAA8B,KAA9B;AAEH;;AAED;AACA,4BAAKe,OAAO,KAAKpB,SAAL,CAAeU,MAAf,GAAwB,CAApC,EAAwC;;AAEpC,iCAAM,IAAIY,KAAK,KAAKtB,SAAL,CAAeU,MAAf,GAAwB,CAAvC,EAA0CY,MAAM,CAAhD,EAAmDA,IAAnD,EAA2D;;AAEvD,oCAAK,KAAKtB,SAAL,CAAgBsB,EAAhB,EAAqBhB,UAArB,IAAmC,CAAxC,EAA4C;;AAExC,yCAAKN,SAAL,CAAeO,MAAf,CAAuBe,EAAvB,EAA2B,CAA3B;AAEH;AAEJ;AAEJ;;AAED;AACA,4BAAKF,OAAO,KAAKpB,SAAL,CAAeU,MAAf,KAA0B,CAAtC,EAA0C;;AAEtC,iCAAKV,SAAL,CAAemB,IAAf,CAAqB;AACjB1B,sCAAM,EADW;AAEjBQ,wCAAQ,KAAKA;AAFI,6BAArB;AAKH;;AAED,+BAAOoB,iBAAP;AAEH;AA7GS,iBAAd;;AAgHA;AACA;AACA;AACA;AACA;;AAEA,oBAAK1B,oBAAoBA,iBAAiBF,IAArC,IAA6C,OAAOE,iBAAiBqB,KAAxB,KAAkC,UAApF,EAAiG;;AAE7F,wBAAIO,WAAW5B,iBAAiBqB,KAAjB,CAAwB,CAAxB,CAAf;AACAO,6BAASlB,SAAT,GAAqB,IAArB;AACA,yBAAKnB,MAAL,CAAYc,SAAZ,CAAsBmB,IAAtB,CAA4BI,QAA5B;AAEH;;AAED,qBAAKtC,OAAL,CAAakC,IAAb,CAAmB,KAAKjC,MAAxB;AAEH,aA/JO;;AAiKRsC,sBAAU,oBAAY;;AAElB,oBAAK,KAAKtC,MAAL,IAAe,OAAO,KAAKA,MAAL,CAAYY,SAAnB,KAAiC,UAArD,EAAkE;;AAE9D,yBAAKZ,MAAL,CAAYY,SAAZ,CAAuB,IAAvB;AAEH;AAEJ,aAzKO;;AA2KR2B,8BAAkB,0BAAWC,KAAX,EAAkBC,GAAlB,EAAwB;;AAEtC,oBAAInB,QAAQoB,SAAUF,KAAV,EAAiB,EAAjB,CAAZ;AACA,uBAAO,CAAElB,SAAS,CAAT,GAAaA,QAAQ,CAArB,GAAyBA,QAAQmB,MAAM,CAAzC,IAA+C,CAAtD;AAEH,aAhLO;;AAkLRE,8BAAkB,0BAAWH,KAAX,EAAkBC,GAAlB,EAAwB;;AAEtC,oBAAInB,QAAQoB,SAAUF,KAAV,EAAiB,EAAjB,CAAZ;AACA,uBAAO,CAAElB,SAAS,CAAT,GAAaA,QAAQ,CAArB,GAAyBA,QAAQmB,MAAM,CAAzC,IAA+C,CAAtD;AAEH,aAvLO;;AAyLRG,0BAAc,sBAAWJ,KAAX,EAAkBC,GAAlB,EAAwB;;AAElC,oBAAInB,QAAQoB,SAAUF,KAAV,EAAiB,EAAjB,CAAZ;AACA,uBAAO,CAAElB,SAAS,CAAT,GAAaA,QAAQ,CAArB,GAAyBA,QAAQmB,MAAM,CAAzC,IAA+C,CAAtD;AAEH,aA9LO;;AAgMRI,uBAAW,mBAAWC,CAAX,EAAcC,CAAd,EAAiBC,CAAjB,EAAqB;;AAE5B,oBAAIC,MAAM,KAAKhD,QAAf;AACA,oBAAIiD,MAAM,KAAKlD,MAAL,CAAYa,QAAZ,CAAqBZ,QAA/B;;AAEAiD,oBAAIjB,IAAJ,CAAUgB,IAAKH,IAAI,CAAT,CAAV,EAAwBG,IAAKH,IAAI,CAAT,CAAxB,EAAsCG,IAAKH,IAAI,CAAT,CAAtC;AACAI,oBAAIjB,IAAJ,CAAUgB,IAAKF,IAAI,CAAT,CAAV,EAAwBE,IAAKF,IAAI,CAAT,CAAxB,EAAsCE,IAAKF,IAAI,CAAT,CAAtC;AACAG,oBAAIjB,IAAJ,CAAUgB,IAAKD,IAAI,CAAT,CAAV,EAAwBC,IAAKD,IAAI,CAAT,CAAxB,EAAsCC,IAAKD,IAAI,CAAT,CAAtC;AAEH,aAzMO;;AA2MRG,2BAAe,uBAAWL,CAAX,EAAe;;AAE1B,oBAAIG,MAAM,KAAKhD,QAAf;AACA,oBAAIiD,MAAM,KAAKlD,MAAL,CAAYa,QAAZ,CAAqBZ,QAA/B;;AAEAiD,oBAAIjB,IAAJ,CAAUgB,IAAKH,IAAI,CAAT,CAAV,EAAwBG,IAAKH,IAAI,CAAT,CAAxB,EAAsCG,IAAKH,IAAI,CAAT,CAAtC;AAEH,aAlNO;;AAoNRM,uBAAW,mBAAWN,CAAX,EAAcC,CAAd,EAAiBC,CAAjB,EAAqB;;AAE5B,oBAAIC,MAAM,KAAK/C,OAAf;AACA,oBAAIgD,MAAM,KAAKlD,MAAL,CAAYa,QAAZ,CAAqBX,OAA/B;;AAEAgD,oBAAIjB,IAAJ,CAAUgB,IAAKH,IAAI,CAAT,CAAV,EAAwBG,IAAKH,IAAI,CAAT,CAAxB,EAAsCG,IAAKH,IAAI,CAAT,CAAtC;AACAI,oBAAIjB,IAAJ,CAAUgB,IAAKF,IAAI,CAAT,CAAV,EAAwBE,IAAKF,IAAI,CAAT,CAAxB,EAAsCE,IAAKF,IAAI,CAAT,CAAtC;AACAG,oBAAIjB,IAAJ,CAAUgB,IAAKD,IAAI,CAAT,CAAV,EAAwBC,IAAKD,IAAI,CAAT,CAAxB,EAAsCC,IAAKD,IAAI,CAAT,CAAtC;AAEH,aA7NO;;AA+NRK,sBAAU,kBAAWP,CAAX,EAAcC,CAAd,EAAiBC,CAAjB,EAAqB;;AAE3B,oBAAIC,MAAM,KAAK9C,MAAf;AACA,oBAAI+C,MAAM,KAAKlD,MAAL,CAAYa,QAAZ,CAAqBV,MAA/B;;AAEA+C,oBAAIjB,IAAJ,CAAUgB,IAAKH,IAAI,CAAT,CAAV,EAAwBG,IAAKH,IAAI,CAAT,CAAxB,EAAsCG,IAAKH,IAAI,CAAT,CAAtC;AACAI,oBAAIjB,IAAJ,CAAUgB,IAAKF,IAAI,CAAT,CAAV,EAAwBE,IAAKF,IAAI,CAAT,CAAxB,EAAsCE,IAAKF,IAAI,CAAT,CAAtC;AACAG,oBAAIjB,IAAJ,CAAUgB,IAAKD,IAAI,CAAT,CAAV,EAAwBC,IAAKD,IAAI,CAAT,CAAxB,EAAsCC,IAAKD,IAAI,CAAT,CAAtC;AAEH,aAxOO;;AA0ORM,mBAAO,eAAWR,CAAX,EAAcC,CAAd,EAAiBC,CAAjB,EAAqB;;AAExB,oBAAIC,MAAM,KAAK7C,GAAf;AACA,oBAAI8C,MAAM,KAAKlD,MAAL,CAAYa,QAAZ,CAAqBT,GAA/B;;AAEA8C,oBAAIjB,IAAJ,CAAUgB,IAAKH,IAAI,CAAT,CAAV,EAAwBG,IAAKH,IAAI,CAAT,CAAxB;AACAI,oBAAIjB,IAAJ,CAAUgB,IAAKF,IAAI,CAAT,CAAV,EAAwBE,IAAKF,IAAI,CAAT,CAAxB;AACAG,oBAAIjB,IAAJ,CAAUgB,IAAKD,IAAI,CAAT,CAAV,EAAwBC,IAAKD,IAAI,CAAT,CAAxB;AAEH,aAnPO;;AAqPRO,uBAAW,mBAAWT,CAAX,EAAe;;AAEtB,oBAAIG,MAAM,KAAK7C,GAAf;AACA,oBAAI8C,MAAM,KAAKlD,MAAL,CAAYa,QAAZ,CAAqBT,GAA/B;;AAEA8C,oBAAIjB,IAAJ,CAAUgB,IAAKH,IAAI,CAAT,CAAV,EAAwBG,IAAKH,IAAI,CAAT,CAAxB;AAEH,aA5PO;;AA8PRU,qBAAS,iBAAWV,CAAX,EAAcC,CAAd,EAAiBC,CAAjB,EAAoBS,EAApB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAgCC,EAAhC,EAAoCC,EAApC,EAAwCC,EAAxC,EAA6C;;AAElD,oBAAIC,OAAO,KAAK9D,QAAL,CAAcuB,MAAzB;;AAEA,oBAAIwC,KAAK,KAAKzB,gBAAL,CAAuBO,CAAvB,EAA0BiB,IAA1B,CAAT;AACA,oBAAIE,KAAK,KAAK1B,gBAAL,CAAuBQ,CAAvB,EAA0BgB,IAA1B,CAAT;AACA,oBAAIG,KAAK,KAAK3B,gBAAL,CAAuBS,CAAvB,EAA0Be,IAA1B,CAAT;;AAEA,qBAAKlB,SAAL,CAAgBmB,EAAhB,EAAoBC,EAApB,EAAwBC,EAAxB;;AAEA,oBAAKT,OAAO9C,SAAZ,EAAwB;;AAEpB,wBAAIwD,QAAQ,KAAK/D,GAAL,CAASoB,MAArB;;AAEAwC,yBAAK,KAAKpB,YAAL,CAAmBa,EAAnB,EAAuBU,KAAvB,CAAL;AACAF,yBAAK,KAAKrB,YAAL,CAAmBc,EAAnB,EAAuBS,KAAvB,CAAL;AACAD,yBAAK,KAAKtB,YAAL,CAAmBe,EAAnB,EAAuBQ,KAAvB,CAAL;;AAEA,yBAAKb,KAAL,CAAYU,EAAZ,EAAgBC,EAAhB,EAAoBC,EAApB;AAEH;;AAED,oBAAKN,OAAOjD,SAAZ,EAAwB;;AAEpB;AACA,wBAAIyD,OAAO,KAAKlE,OAAL,CAAasB,MAAxB;AACAwC,yBAAK,KAAKrB,gBAAL,CAAuBiB,EAAvB,EAA2BQ,IAA3B,CAAL;;AAEAH,yBAAKL,OAAOC,EAAP,GAAYG,EAAZ,GAAiB,KAAKrB,gBAAL,CAAuBkB,EAAvB,EAA2BO,IAA3B,CAAtB;AACAF,yBAAKN,OAAOE,EAAP,GAAYE,EAAZ,GAAiB,KAAKrB,gBAAL,CAAuBmB,EAAvB,EAA2BM,IAA3B,CAAtB;;AAEA,yBAAKhB,SAAL,CAAgBY,EAAhB,EAAoBC,EAApB,EAAwBC,EAAxB;AAEH;;AAED,oBAAK,KAAK/D,MAAL,CAAYqB,MAAZ,GAAqB,CAA1B,EAA8B;;AAE1B,yBAAK6B,QAAL,CAAeW,EAAf,EAAmBC,EAAnB,EAAuBC,EAAvB;AAEH;AAEJ,aAvSO;;AAySRG,6BAAiB,yBAAWpE,QAAX,EAAqBG,GAArB,EAA2B;;AAExC,qBAAKJ,MAAL,CAAYa,QAAZ,CAAqByD,IAArB,GAA4B,MAA5B;;AAEA,oBAAIP,OAAO,KAAK9D,QAAL,CAAcuB,MAAzB;AACA,oBAAI2C,QAAQ,KAAK/D,GAAL,CAASoB,MAArB;;AAEA,qBAAM,IAAI+C,KAAK,CAAT,EAAYC,IAAIvE,SAASuB,MAA/B,EAAuC+C,KAAKC,CAA5C,EAA+CD,IAA/C,EAAuD;;AAEnD,yBAAKpB,aAAL,CAAoB,KAAKZ,gBAAL,CAAuBtC,SAAUsE,EAAV,CAAvB,EAAuCR,IAAvC,CAApB;AAEH;;AAED,qBAAM,IAAIU,MAAM,CAAV,EAAaD,IAAIpE,IAAIoB,MAA3B,EAAmCiD,MAAMD,CAAzC,EAA4CC,KAA5C,EAAqD;;AAEjD,yBAAKlB,SAAL,CAAgB,KAAKX,YAAL,CAAmBxC,IAAKqE,GAAL,CAAnB,EAA+BN,KAA/B,CAAhB;AAEH;AAEJ;;AA5TO,SAAZ;;AAgUArE,cAAMQ,WAAN,CAAmB,EAAnB,EAAuB,KAAvB;;AAEA,eAAOR,KAAP;AAEH;;AAED;;AAEA,aAASL,SAAT,CAAoBiF,OAApB,EAA8B;;AAE1B,aAAKA,OAAL,GAAiBA,YAAY/D,SAAd,GAA4B+D,OAA5B,GAAsClF,MAAMmF,qBAA3D;;AAEA,aAAK7D,SAAL,GAAiB,IAAjB;AAEH;;AAEDrB,cAAUmF,SAAV,GAAsB;;AAElBC,qBAAapF,SAFK;;AAIlBqF,cAAM,cAAWC,GAAX,EAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,OAApC,EAA8C;;AAEhD,gBAAIC,QAAQ,IAAZ;;AAEA,gBAAIC,SAAS,IAAI5F,MAAM6F,UAAV,CAAsBF,MAAMT,OAA5B,CAAb;AACAU,mBAAOE,OAAP,CAAgB,KAAKC,IAArB;AACAH,mBAAON,IAAP,CAAaC,GAAb,EAAkB,UAAWS,IAAX,EAAkB;;AAEhCR,uBAAQG,MAAMM,KAAN,CAAaD,IAAb,CAAR;AAEH,aAJD,EAIGP,UAJH,EAIeC,OAJf;AAMH,SAhBiB;;AAkBlBI,iBAAS,iBAAW9C,KAAX,EAAmB;;AAExB,iBAAK+C,IAAL,GAAY/C,KAAZ;AAEH,SAtBiB;;AAwBlBkD,sBAAc,sBAAW5E,SAAX,EAAuB;;AAEjC,iBAAKA,SAAL,GAAiBA,SAAjB;;AAEA,mBAAO,IAAP;AAEH,SA9BiB;;AAgClB2E,eAAO,eAAWD,IAAX,EAAkB;;AAErBG,oBAAQC,IAAR,CAAc,WAAd;;AAEA,gBAAI9F,QAAQ,IAAID,WAAJ,EAAZ;;AAEA,gBAAK2F,KAAKK,OAAL,CAAc,MAAd,MAA2B,CAAE,CAAlC,EAAsC;;AAElC;AACAL,uBAAOA,KAAKM,OAAL,CAAc,OAAd,EAAuB,IAAvB,CAAP;AAEH;;AAED,gBAAKN,KAAKK,OAAL,CAAc,MAAd,MAA2B,CAAE,CAAlC,EAAsC;;AAElC;AACAL,uBAAOA,KAAKM,OAAL,CAAc,OAAd,EAAuB,EAAvB,CAAP;AAEH;;AAED,gBAAIC,QAAQP,KAAKQ,KAAL,CAAY,IAAZ,CAAZ;AACA,gBAAIC,OAAO,EAAX;AAAA,gBAAeC,gBAAgB,EAA/B;AACA,gBAAIC,aAAa,CAAjB;AACA,gBAAIC,SAAS,EAAb;;AAEA;AACA,gBAAIC,WAAa,OAAO,GAAGA,QAAV,KAAuB,UAAxC;;AAEA,iBAAM,IAAIC,IAAI,CAAR,EAAW9B,IAAIuB,MAAMvE,MAA3B,EAAmC8E,IAAI9B,CAAvC,EAA0C8B,GAA1C,EAAiD;;AAE7CL,uBAAOF,MAAOO,CAAP,CAAP;;AAEAL,uBAAOI,WAAWJ,KAAKI,QAAL,EAAX,GAA6BJ,KAAKM,IAAL,EAApC;;AAEAJ,6BAAaF,KAAKzE,MAAlB;;AAEA,oBAAK2E,eAAe,CAApB,EAAwB;;AAExBD,gCAAgBD,KAAKO,MAAL,CAAa,CAAb,CAAhB;;AAEA;AACA,oBAAKN,kBAAkB,GAAvB,EAA6B;;AAE7B,oBAAKA,kBAAkB,GAAvB,EAA6B;;AAEzB,wBAAIO,OAAOR,KAAKD,KAAL,CAAY,KAAZ,CAAX;;AAEA,4BAASS,KAAM,CAAN,CAAT;;AAEI,6BAAK,GAAL;AACI3G,kCAAMG,QAAN,CAAegC,IAAf,CACIyE,WAAYD,KAAM,CAAN,CAAZ,CADJ,EAEIC,WAAYD,KAAM,CAAN,CAAZ,CAFJ,EAGIC,WAAYD,KAAM,CAAN,CAAZ,CAHJ;AAKA,gCAAKA,KAAKjF,MAAL,KAAgB,CAArB,EAAyB;;AAErB1B,sCAAMK,MAAN,CAAa8B,IAAb,CACIyE,WAAYD,KAAM,CAAN,CAAZ,CADJ,EAEIC,WAAYD,KAAM,CAAN,CAAZ,CAFJ,EAGIC,WAAYD,KAAM,CAAN,CAAZ,CAHJ;AAOH;AACD;AACJ,6BAAK,IAAL;AACI3G,kCAAMI,OAAN,CAAc+B,IAAd,CACIyE,WAAYD,KAAM,CAAN,CAAZ,CADJ,EAEIC,WAAYD,KAAM,CAAN,CAAZ,CAFJ,EAGIC,WAAYD,KAAM,CAAN,CAAZ,CAHJ;AAKA;AACJ,6BAAK,IAAL;AACI3G,kCAAMM,GAAN,CAAU6B,IAAV,CACIyE,WAAYD,KAAM,CAAN,CAAZ,CADJ,EAEIC,WAAYD,KAAM,CAAN,CAAZ,CAFJ;AAIA;;AA/BR;AAmCH,iBAvCD,MAuCO,IAAKP,kBAAkB,GAAvB,EAA6B;;AAEhC,wBAAIS,WAAWV,KAAKW,MAAL,CAAa,CAAb,EAAiBL,IAAjB,EAAf;AACA,wBAAIM,aAAaF,SAASX,KAAT,CAAgB,KAAhB,CAAjB;AACA,wBAAIc,eAAe,EAAnB;;AAEA;;AAEA,yBAAM,IAAIC,IAAI,CAAR,EAAWC,KAAKH,WAAWrF,MAAjC,EAAyCuF,IAAIC,EAA7C,EAAiDD,GAAjD,EAAwD;;AAEpD,4BAAIE,SAASJ,WAAYE,CAAZ,CAAb;;AAEA,4BAAKE,OAAOzF,MAAP,GAAgB,CAArB,EAAyB;;AAErB,gCAAI0F,cAAcD,OAAOjB,KAAP,CAAc,GAAd,CAAlB;AACAc,yCAAa7E,IAAb,CAAmBiF,WAAnB;AAEH;AAEJ;;AAED;;AAEA,wBAAIC,KAAKL,aAAc,CAAd,CAAT;;AAEA,yBAAM,IAAIC,IAAI,CAAR,EAAWC,KAAKF,aAAatF,MAAb,GAAsB,CAA5C,EAA+CuF,IAAIC,EAAnD,EAAuDD,GAAvD,EAA8D;;AAE1D,4BAAIK,KAAKN,aAAcC,CAAd,CAAT;AACA,4BAAIM,KAAKP,aAAcC,IAAI,CAAlB,CAAT;;AAEAjH,8BAAM0D,OAAN,CACI2D,GAAI,CAAJ,CADJ,EACaC,GAAI,CAAJ,CADb,EACsBC,GAAI,CAAJ,CADtB,EAEIF,GAAI,CAAJ,CAFJ,EAEaC,GAAI,CAAJ,CAFb,EAEsBC,GAAI,CAAJ,CAFtB,EAGIF,GAAI,CAAJ,CAHJ,EAGaC,GAAI,CAAJ,CAHb,EAGsBC,GAAI,CAAJ,CAHtB;AAMH;AAEJ,iBAtCM,MAsCA,IAAKnB,kBAAkB,GAAvB,EAA6B;;AAEhC,wBAAIoB,YAAYrB,KAAKsB,SAAL,CAAgB,CAAhB,EAAoBhB,IAApB,GAA2BP,KAA3B,CAAkC,GAAlC,CAAhB;AACA,wBAAIwB,eAAe,EAAnB;AAAA,wBAAuBC,UAAU,EAAjC;;AAEA,wBAAKxB,KAAKJ,OAAL,CAAc,GAAd,MAAwB,CAAE,CAA/B,EAAmC;;AAE/B2B,uCAAeF,SAAf;AAEH,qBAJD,MAIO;;AAEH,6BAAM,IAAII,KAAK,CAAT,EAAYC,OAAOL,UAAU9F,MAAnC,EAA2CkG,KAAKC,IAAhD,EAAsDD,IAAtD,EAA8D;;AAE1D,gCAAIE,QAAQN,UAAWI,EAAX,EAAgB1B,KAAhB,CAAuB,GAAvB,CAAZ;;AAEA,gCAAK4B,MAAO,CAAP,MAAe,EAApB,EAAyBJ,aAAavF,IAAb,CAAmB2F,MAAO,CAAP,CAAnB;AACzB,gCAAKA,MAAO,CAAP,MAAe,EAApB,EAAyBH,QAAQxF,IAAR,CAAc2F,MAAO,CAAP,CAAd;AAE5B;AAEJ;AACD9H,0BAAMuE,eAAN,CAAuBmD,YAAvB,EAAqCC,OAArC;AAEH,iBAvBM,MAuBA,IAAK,CAAErB,SAAS1G,eAAemI,IAAf,CAAqB5B,IAArB,CAAX,MAA6C,IAAlD,EAAyD;;AAE5D;AACA;AACA;;AAEA;AACA;AACA,wBAAI1F,OAAO,CAAE,MAAM6F,OAAQ,CAAR,EAAYQ,MAAZ,CAAoB,CAApB,EAAwBL,IAAxB,EAAR,EAAyCK,MAAzC,CAAiD,CAAjD,CAAX;;AAEA9G,0BAAMQ,WAAN,CAAmBC,IAAnB;AAEH,iBAZM,MAYA,IAAKX,qBAAqBkI,IAArB,CAA2B7B,IAA3B,CAAL,EAAyC;;AAE5C;;AAEAnG,0BAAME,MAAN,CAAagB,aAAb,CAA4BiF,KAAKsB,SAAL,CAAgB,CAAhB,EAAoBhB,IAApB,EAA5B,EAAwDzG,MAAMO,iBAA9D;AAEH,iBANM,MAMA,IAAKV,yBAAyBmI,IAAzB,CAA+B7B,IAA/B,CAAL,EAA6C;;AAEhD;;AAEAnG,0BAAMO,iBAAN,CAAwB4B,IAAxB,CAA8BgE,KAAKsB,SAAL,CAAgB,CAAhB,EAAoBhB,IAApB,EAA9B;AAEH,iBANM,MAMA,IAAKL,kBAAkB,GAAvB,EAA6B;;AAEhCE,6BAASH,KAAKD,KAAL,CAAY,GAAZ,CAAT;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AAWA,wBAAKI,OAAO5E,MAAP,GAAgB,CAArB,EAAyB;;AAErB,4BAAIgB,QAAQ4D,OAAQ,CAAR,EAAYG,IAAZ,GAAmBwB,WAAnB,EAAZ;AACAjI,8BAAME,MAAN,CAAae,MAAb,GAAwByB,UAAU,GAAV,IAAiBA,UAAU,KAAnD;AAEH,qBALD,MAKO;;AAEH;AACA1C,8BAAME,MAAN,CAAae,MAAb,GAAsB,IAAtB;AAEH;AACD,wBAAIQ,WAAWzB,MAAME,MAAN,CAAaU,eAAb,EAAf;AACA,wBAAKa,QAAL,EAAgBA,SAASR,MAAT,GAAkBjB,MAAME,MAAN,CAAae,MAA/B;AAEnB,iBAtCM,MAsCA;;AAEH;AACA,wBAAKkF,SAAS,IAAd,EAAqB;;AAErB,0BAAM,IAAI+B,KAAJ,CAAW,wCAAwC/B,IAAxC,GAA+C,GAA1D,CAAN;AAEH;AAEJ;;AAEDnG,kBAAMwC,QAAN;;AAEA,gBAAI2F,YAAY,IAAIzI,MAAM0I,KAAV,EAAhB;AACAD,sBAAU5H,iBAAV,GAA8B,GAAG8H,MAAH,CAAWrI,MAAMO,iBAAjB,CAA9B;;AAEA,iBAAM,IAAIiG,IAAI,CAAR,EAAW9B,IAAI1E,MAAMC,OAAN,CAAcyB,MAAnC,EAA2C8E,IAAI9B,CAA/C,EAAkD8B,GAAlD,EAAyD;;AAErD,oBAAItG,SAASF,MAAMC,OAAN,CAAeuG,CAAf,CAAb;AACA,oBAAIzF,WAAWb,OAAOa,QAAtB;AACA,oBAAIC,YAAYd,OAAOc,SAAvB;AACA,oBAAIsH,SAAWvH,SAASyD,IAAT,KAAkB,MAAjC;;AAEA;AACA,oBAAKzD,SAASZ,QAAT,CAAkBuB,MAAlB,KAA6B,CAAlC,EAAsC;;AAEtC,oBAAI6G,iBAAiB,IAAI7I,MAAM8I,cAAV,EAArB;;AAEAD,+BAAeE,YAAf,CAA6B,UAA7B,EAAyC,IAAI/I,MAAMgJ,sBAAV,CAAkC3H,SAASZ,QAA3C,EAAqD,CAArD,CAAzC;;AAEA,oBAAKY,SAASX,OAAT,CAAiBsB,MAAjB,GAA0B,CAA/B,EAAmC;;AAE/B6G,mCAAeE,YAAf,CAA6B,QAA7B,EAAuC,IAAI/I,MAAMgJ,sBAAV,CAAkC3H,SAASX,OAA3C,EAAoD,CAApD,CAAvC;AAEH,iBAJD,MAIO;;AAEHmI,mCAAeI,oBAAf;AAEH;;AAED,oBAAK5H,SAASV,MAAT,CAAgBqB,MAAhB,GAAyB,CAA9B,EAAkC;;AAE9B6G,mCAAeE,YAAf,CAA6B,OAA7B,EAAsC,IAAI/I,MAAMgJ,sBAAV,CAAkC3H,SAASV,MAA3C,EAAmD,CAAnD,CAAtC;AAEH;;AAED,oBAAKU,SAAST,GAAT,CAAaoB,MAAb,GAAsB,CAA3B,EAA+B;;AAE3B6G,mCAAeE,YAAf,CAA6B,IAA7B,EAAmC,IAAI/I,MAAMgJ,sBAAV,CAAkC3H,SAAST,GAA3C,EAAgD,CAAhD,CAAnC;AAEH;;AAED;;AAEA,oBAAIsI,mBAAmB,EAAvB;;AAEA,qBAAM,IAAItG,KAAK,CAAT,EAAYuG,QAAQ7H,UAAUU,MAApC,EAA4CY,KAAKuG,KAAjD,EAAwDvG,IAAxD,EAAgE;;AAE5D,wBAAIwG,iBAAiB9H,UAAWsB,EAAX,CAArB;AACA,wBAAIb,WAAWZ,SAAf;;AAEA,wBAAK,KAAKG,SAAL,KAAmB,IAAxB,EAA+B;;AAE3BS,mCAAW,KAAKT,SAAL,CAAe+H,MAAf,CAAuBD,eAAerI,IAAtC,CAAX;;AAEA;AACA,4BAAK6H,UAAU7G,QAAV,IAAsB,EAAIA,oBAAoB/B,MAAMsJ,iBAA9B,CAA3B,EAA+E;;AAE3E,gCAAIC,eAAe,IAAIvJ,MAAMsJ,iBAAV,EAAnB;AACAC,yCAAaC,IAAb,CAAmBzH,QAAnB;AACAA,uCAAWwH,YAAX;AAEH;AAEJ;;AAED,wBAAK,CAAExH,QAAP,EAAkB;;AAEdA,mCAAa,CAAE6G,MAAF,GAAW,IAAI5I,MAAMyJ,iBAAV,EAAX,GAA2C,IAAIzJ,MAAMsJ,iBAAV,EAAxD;AACAvH,iCAAShB,IAAT,GAAgBqI,eAAerI,IAA/B;AAEH;;AAEDgB,6BAAS2H,WAAT,GAAuBN,eAAe7H,MAAf,GAAwB,KAAxB,GAAgC,IAAvD;;AAEA2H,qCAAiBzG,IAAjB,CAAuBV,QAAvB;AAEH;;AAED;;AAEA,oBAAI4H,IAAJ;;AAEA,oBAAKT,iBAAiBlH,MAAjB,GAA0B,CAA/B,EAAmC;;AAE/B,yBAAM,IAAIY,KAAK,CAAT,EAAYuG,QAAQ7H,UAAUU,MAApC,EAA4CY,KAAKuG,KAAjD,EAAwDvG,IAAxD,EAAgE;;AAE5D,4BAAIwG,iBAAiB9H,UAAWsB,EAAX,CAArB;AACAiG,uCAAee,QAAf,CAAyBR,eAAehH,UAAxC,EAAoDgH,eAAexH,UAAnE,EAA+EgB,EAA/E;AAEH;;AAED+G,2BAAS,CAAEf,MAAF,GAAW,IAAI5I,MAAM6J,IAAV,CAAgBhB,cAAhB,EAAgCK,gBAAhC,CAAX,GAAgE,IAAIlJ,MAAM8J,YAAV,CAAwBjB,cAAxB,EAAwCK,gBAAxC,CAAzE;AAEH,iBAXD,MAWO;;AAEHS,2BAAS,CAAEf,MAAF,GAAW,IAAI5I,MAAM6J,IAAV,CAAgBhB,cAAhB,EAAgCK,iBAAkB,CAAlB,CAAhC,CAAX,GAAqE,IAAIlJ,MAAM8J,YAAV,CAAwBjB,cAAxB,EAAwCK,iBAAkB,CAAlB,CAAxC,CAA9E;AAEH;;AAEDS,qBAAK5I,IAAL,GAAYP,OAAOO,IAAnB;;AAEA0H,0BAAUsB,GAAV,CAAeJ,IAAf;AAEH;;AAEDxD,oBAAQ6D,OAAR,CAAiB,WAAjB;;AAEA,mBAAOvB,SAAP;AAEH;;AArWiB,KAAtB;;AAyWA,WAAOxI,SAAP;AAEH,CAtsBiB,EAAlB","file":"OBJLoader.js","sourcesContent":["/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.OBJLoader = ( function () {\n\n    // o object_name | g group_name\n    var object_pattern = /^[og]\\s*(.+)?/;\n    // mtllib file_reference\n    var material_library_pattern = /^mtllib /;\n    // usemtl material_name\n    var material_use_pattern = /^usemtl /;\n\n    function ParserState() {\n\n        var state = {\n            objects: [],\n            object: {},\n\n            vertices: [],\n            normals: [],\n            colors: [],\n            uvs: [],\n\n            materialLibraries: [],\n\n            startObject: function ( name, fromDeclaration ) {\n\n                // If the current object (initial from reset) is not from a g/o declaration in the parsed\n                // file. We need to use it for the first parsed g/o to keep things in sync.\n                if ( this.object && this.object.fromDeclaration === false ) {\n\n                    this.object.name = name;\n                    this.object.fromDeclaration = ( fromDeclaration !== false );\n                    return;\n\n                }\n\n                var previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n                if ( this.object && typeof this.object._finalize === 'function' ) {\n\n                    this.object._finalize( true );\n\n                }\n\n                this.object = {\n                    name: name || '',\n                    fromDeclaration: ( fromDeclaration !== false ),\n\n                    geometry: {\n                        vertices: [],\n                        normals: [],\n                        colors: [],\n                        uvs: []\n                    },\n                    materials: [],\n                    smooth: true,\n\n                    startMaterial: function ( name, libraries ) {\n\n                        var previous = this._finalize( false );\n\n                        // New usemtl declaration overwrites an inherited material, except if faces were declared\n                        // after the material, then it must be preserved for proper MultiMaterial continuation.\n                        if ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n                            this.materials.splice( previous.index, 1 );\n\n                        }\n\n                        var material = {\n                            index: this.materials.length,\n                            name: name || '',\n                            mtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n                            smooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n                            groupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n                            groupEnd: - 1,\n                            groupCount: - 1,\n                            inherited: false,\n\n                            clone: function ( index ) {\n\n                                var cloned = {\n                                    index: ( typeof index === 'number' ? index : this.index ),\n                                    name: this.name,\n                                    mtllib: this.mtllib,\n                                    smooth: this.smooth,\n                                    groupStart: 0,\n                                    groupEnd: - 1,\n                                    groupCount: - 1,\n                                    inherited: false\n                                };\n                                cloned.clone = this.clone.bind( cloned );\n                                return cloned;\n\n                            }\n                        };\n\n                        this.materials.push( material );\n\n                        return material;\n\n                    },\n\n                    currentMaterial: function () {\n\n                        if ( this.materials.length > 0 ) {\n\n                            return this.materials[ this.materials.length - 1 ];\n\n                        }\n\n                        return undefined;\n\n                    },\n\n                    _finalize: function ( end ) {\n\n                        var lastMultiMaterial = this.currentMaterial();\n                        if ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n                            lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n                            lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n                            lastMultiMaterial.inherited = false;\n\n                        }\n\n                        // Ignore objects tail materials if no face declarations followed them before a new o/g started.\n                        if ( end && this.materials.length > 1 ) {\n\n                            for ( var mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n                                if ( this.materials[ mi ].groupCount <= 0 ) {\n\n                                    this.materials.splice( mi, 1 );\n\n                                }\n\n                            }\n\n                        }\n\n                        // Guarantee at least one empty material, this makes the creation later more straight forward.\n                        if ( end && this.materials.length === 0 ) {\n\n                            this.materials.push( {\n                                name: '',\n                                smooth: this.smooth\n                            } );\n\n                        }\n\n                        return lastMultiMaterial;\n\n                    }\n                };\n\n                // Inherit previous objects material.\n                // Spec tells us that a declared material must be set to all objects until a new material is declared.\n                // If a usemtl declaration is encountered while this new object is being parsed, it will\n                // overwrite the inherited material. Exception being that there was already face declarations\n                // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n                if ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n                    var declared = previousMaterial.clone( 0 );\n                    declared.inherited = true;\n                    this.object.materials.push( declared );\n\n                }\n\n                this.objects.push( this.object );\n\n            },\n\n            finalize: function () {\n\n                if ( this.object && typeof this.object._finalize === 'function' ) {\n\n                    this.object._finalize( true );\n\n                }\n\n            },\n\n            parseVertexIndex: function ( value, len ) {\n\n                var index = parseInt( value, 10 );\n                return ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n            },\n\n            parseNormalIndex: function ( value, len ) {\n\n                var index = parseInt( value, 10 );\n                return ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n            },\n\n            parseUVIndex: function ( value, len ) {\n\n                var index = parseInt( value, 10 );\n                return ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n            },\n\n            addVertex: function ( a, b, c ) {\n\n                var src = this.vertices;\n                var dst = this.object.geometry.vertices;\n\n                dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n                dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n                dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n            },\n\n            addVertexLine: function ( a ) {\n\n                var src = this.vertices;\n                var dst = this.object.geometry.vertices;\n\n                dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n            },\n\n            addNormal: function ( a, b, c ) {\n\n                var src = this.normals;\n                var dst = this.object.geometry.normals;\n\n                dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n                dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n                dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n            },\n\n            addColor: function ( a, b, c ) {\n\n                var src = this.colors;\n                var dst = this.object.geometry.colors;\n\n                dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n                dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n                dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n            },\n\n            addUV: function ( a, b, c ) {\n\n                var src = this.uvs;\n                var dst = this.object.geometry.uvs;\n\n                dst.push( src[ a + 0 ], src[ a + 1 ] );\n                dst.push( src[ b + 0 ], src[ b + 1 ] );\n                dst.push( src[ c + 0 ], src[ c + 1 ] );\n\n            },\n\n            addUVLine: function ( a ) {\n\n                var src = this.uvs;\n                var dst = this.object.geometry.uvs;\n\n                dst.push( src[ a + 0 ], src[ a + 1 ] );\n\n            },\n\n            addFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n                var vLen = this.vertices.length;\n\n                var ia = this.parseVertexIndex( a, vLen );\n                var ib = this.parseVertexIndex( b, vLen );\n                var ic = this.parseVertexIndex( c, vLen );\n\n                this.addVertex( ia, ib, ic );\n\n                if ( ua !== undefined ) {\n\n                    var uvLen = this.uvs.length;\n\n                    ia = this.parseUVIndex( ua, uvLen );\n                    ib = this.parseUVIndex( ub, uvLen );\n                    ic = this.parseUVIndex( uc, uvLen );\n\n                    this.addUV( ia, ib, ic );\n\n                }\n\n                if ( na !== undefined ) {\n\n                    // Normals are many times the same. If so, skip function call and parseInt.\n                    var nLen = this.normals.length;\n                    ia = this.parseNormalIndex( na, nLen );\n\n                    ib = na === nb ? ia : this.parseNormalIndex( nb, nLen );\n                    ic = na === nc ? ia : this.parseNormalIndex( nc, nLen );\n\n                    this.addNormal( ia, ib, ic );\n\n                }\n\n                if ( this.colors.length > 0 ) {\n\n                    this.addColor( ia, ib, ic );\n\n                }\n\n            },\n\n            addLineGeometry: function ( vertices, uvs ) {\n\n                this.object.geometry.type = 'Line';\n\n                var vLen = this.vertices.length;\n                var uvLen = this.uvs.length;\n\n                for ( var vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n                    this.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n                }\n\n                for ( var uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n                    this.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n                }\n\n            }\n\n        };\n\n        state.startObject( '', false );\n\n        return state;\n\n    }\n\n    //\n\n    function OBJLoader( manager ) {\n\n        this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n        this.materials = null;\n\n    }\n\n    OBJLoader.prototype = {\n\n        constructor: OBJLoader,\n\n        load: function ( url, onLoad, onProgress, onError ) {\n\n            var scope = this;\n\n            var loader = new THREE.FileLoader( scope.manager );\n            loader.setPath( this.path );\n            loader.load( url, function ( text ) {\n\n                onLoad( scope.parse( text ) );\n\n            }, onProgress, onError );\n\n        },\n\n        setPath: function ( value ) {\n\n            this.path = value;\n\n        },\n\n        setMaterials: function ( materials ) {\n\n            this.materials = materials;\n\n            return this;\n\n        },\n\n        parse: function ( text ) {\n\n            console.time( 'OBJLoader' );\n\n            var state = new ParserState();\n\n            if ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n                // This is faster than String.split with regex that splits on both\n                text = text.replace( /\\r\\n/g, '\\n' );\n\n            }\n\n            if ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n                // join lines separated by a line continuation character (\\)\n                text = text.replace( /\\\\\\n/g, '' );\n\n            }\n\n            var lines = text.split( '\\n' );\n            var line = '', lineFirstChar = '';\n            var lineLength = 0;\n            var result = [];\n\n            // Faster to just trim left side of the line. Use if available.\n            var trimLeft = ( typeof ''.trimLeft === 'function' );\n\n            for ( var i = 0, l = lines.length; i < l; i ++ ) {\n\n                line = lines[ i ];\n\n                line = trimLeft ? line.trimLeft() : line.trim();\n\n                lineLength = line.length;\n\n                if ( lineLength === 0 ) continue;\n\n                lineFirstChar = line.charAt( 0 );\n\n                // @todo invoke passed in handler if any\n                if ( lineFirstChar === '#' ) continue;\n\n                if ( lineFirstChar === 'v' ) {\n\n                    var data = line.split( /\\s+/ );\n\n                    switch ( data[ 0 ] ) {\n\n                        case 'v':\n                            state.vertices.push(\n                                parseFloat( data[ 1 ] ),\n                                parseFloat( data[ 2 ] ),\n                                parseFloat( data[ 3 ] )\n                            );\n                            if ( data.length === 8 ) {\n\n                                state.colors.push(\n                                    parseFloat( data[ 4 ] ),\n                                    parseFloat( data[ 5 ] ),\n                                    parseFloat( data[ 6 ] )\n\n                                );\n\n                            }\n                            break;\n                        case 'vn':\n                            state.normals.push(\n                                parseFloat( data[ 1 ] ),\n                                parseFloat( data[ 2 ] ),\n                                parseFloat( data[ 3 ] )\n                            );\n                            break;\n                        case 'vt':\n                            state.uvs.push(\n                                parseFloat( data[ 1 ] ),\n                                parseFloat( data[ 2 ] )\n                            );\n                            break;\n\n                    }\n\n                } else if ( lineFirstChar === 'f' ) {\n\n                    var lineData = line.substr( 1 ).trim();\n                    var vertexData = lineData.split( /\\s+/ );\n                    var faceVertices = [];\n\n                    // Parse the face vertex data into an easy to work with format\n\n                    for ( var j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n                        var vertex = vertexData[ j ];\n\n                        if ( vertex.length > 0 ) {\n\n                            var vertexParts = vertex.split( '/' );\n                            faceVertices.push( vertexParts );\n\n                        }\n\n                    }\n\n                    // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n                    var v1 = faceVertices[ 0 ];\n\n                    for ( var j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n                        var v2 = faceVertices[ j ];\n                        var v3 = faceVertices[ j + 1 ];\n\n                        state.addFace(\n                            v1[ 0 ], v2[ 0 ], v3[ 0 ],\n                            v1[ 1 ], v2[ 1 ], v3[ 1 ],\n                            v1[ 2 ], v2[ 2 ], v3[ 2 ]\n                        );\n\n                    }\n\n                } else if ( lineFirstChar === 'l' ) {\n\n                    var lineParts = line.substring( 1 ).trim().split( \" \" );\n                    var lineVertices = [], lineUVs = [];\n\n                    if ( line.indexOf( \"/\" ) === - 1 ) {\n\n                        lineVertices = lineParts;\n\n                    } else {\n\n                        for ( var li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n                            var parts = lineParts[ li ].split( \"/\" );\n\n                            if ( parts[ 0 ] !== \"\" ) lineVertices.push( parts[ 0 ] );\n                            if ( parts[ 1 ] !== \"\" ) lineUVs.push( parts[ 1 ] );\n\n                        }\n\n                    }\n                    state.addLineGeometry( lineVertices, lineUVs );\n\n                } else if ( ( result = object_pattern.exec( line ) ) !== null ) {\n\n                    // o object_name\n                    // or\n                    // g group_name\n\n                    // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    // var name = result[ 0 ].substr( 1 ).trim();\n                    var name = ( \" \" + result[ 0 ].substr( 1 ).trim() ).substr( 1 );\n\n                    state.startObject( name );\n\n                } else if ( material_use_pattern.test( line ) ) {\n\n                    // material\n\n                    state.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n                } else if ( material_library_pattern.test( line ) ) {\n\n                    // mtl file\n\n                    state.materialLibraries.push( line.substring( 7 ).trim() );\n\n                } else if ( lineFirstChar === 's' ) {\n\n                    result = line.split( ' ' );\n\n                    // smooth shading\n\n                    // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n                    // but does not define a usemtl for each face set.\n                    // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n                    // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n                    // where explicit usemtl defines geometry groups.\n                    // Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n                    /*\n                     * http://paulbourke.net/dataformats/obj/\n                     * or\n                     * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n                     *\n                     * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n                     * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n                     * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n                     * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n                     * than 0.\"\n                     */\n                    if ( result.length > 1 ) {\n\n                        var value = result[ 1 ].trim().toLowerCase();\n                        state.object.smooth = ( value !== '0' && value !== 'off' );\n\n                    } else {\n\n                        // ZBrush can produce \"s\" lines #11707\n                        state.object.smooth = true;\n\n                    }\n                    var material = state.object.currentMaterial();\n                    if ( material ) material.smooth = state.object.smooth;\n\n                } else {\n\n                    // Handle null terminated files without exception\n                    if ( line === '\\0' ) continue;\n\n                    throw new Error( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n                }\n\n            }\n\n            state.finalize();\n\n            var container = new THREE.Group();\n            container.materialLibraries = [].concat( state.materialLibraries );\n\n            for ( var i = 0, l = state.objects.length; i < l; i ++ ) {\n\n                var object = state.objects[ i ];\n                var geometry = object.geometry;\n                var materials = object.materials;\n                var isLine = ( geometry.type === 'Line' );\n\n                // Skip o/g line declarations that did not follow with any faces\n                if ( geometry.vertices.length === 0 ) continue;\n\n                var buffergeometry = new THREE.BufferGeometry();\n\n                buffergeometry.addAttribute( 'position', new THREE.Float32BufferAttribute( geometry.vertices, 3 ) );\n\n                if ( geometry.normals.length > 0 ) {\n\n                    buffergeometry.addAttribute( 'normal', new THREE.Float32BufferAttribute( geometry.normals, 3 ) );\n\n                } else {\n\n                    buffergeometry.computeVertexNormals();\n\n                }\n\n                if ( geometry.colors.length > 0 ) {\n\n                    buffergeometry.addAttribute( 'color', new THREE.Float32BufferAttribute( geometry.colors, 3 ) );\n\n                }\n\n                if ( geometry.uvs.length > 0 ) {\n\n                    buffergeometry.addAttribute( 'uv', new THREE.Float32BufferAttribute( geometry.uvs, 2 ) );\n\n                }\n\n                // Create materials\n\n                var createdMaterials = [];\n\n                for ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n                    var sourceMaterial = materials[ mi ];\n                    var material = undefined;\n\n                    if ( this.materials !== null ) {\n\n                        material = this.materials.create( sourceMaterial.name );\n\n                        // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n                        if ( isLine && material && ! ( material instanceof THREE.LineBasicMaterial ) ) {\n\n                            var materialLine = new THREE.LineBasicMaterial();\n                            materialLine.copy( material );\n                            material = materialLine;\n\n                        }\n\n                    }\n\n                    if ( ! material ) {\n\n                        material = ( ! isLine ? new THREE.MeshPhongMaterial() : new THREE.LineBasicMaterial() );\n                        material.name = sourceMaterial.name;\n\n                    }\n\n                    material.flatShading = sourceMaterial.smooth ? false : true;\n\n                    createdMaterials.push( material );\n\n                }\n\n                // Create mesh\n\n                var mesh;\n\n                if ( createdMaterials.length > 1 ) {\n\n                    for ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n                        var sourceMaterial = materials[ mi ];\n                        buffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n                    }\n\n                    mesh = ( ! isLine ? new THREE.Mesh( buffergeometry, createdMaterials ) : new THREE.LineSegments( buffergeometry, createdMaterials ) );\n\n                } else {\n\n                    mesh = ( ! isLine ? new THREE.Mesh( buffergeometry, createdMaterials[ 0 ] ) : new THREE.LineSegments( buffergeometry, createdMaterials[ 0 ] ) );\n\n                }\n\n                mesh.name = object.name;\n\n                container.add( mesh );\n\n            }\n\n            console.timeEnd( 'OBJLoader' );\n\n            return container;\n\n        }\n\n    };\n\n    return OBJLoader;\n\n} )();"]}