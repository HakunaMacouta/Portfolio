{"version":3,"sources":["three/TransformControls.js"],"names":["GizmoMaterial","parameters","THREE","MeshBasicMaterial","call","depthTest","depthWrite","side","FrontSide","transparent","setValues","oldColor","color","clone","oldOpacity","opacity","highlight","highlighted","setRGB","copy","prototype","Object","create","constructor","GizmoLineMaterial","LineBasicMaterial","linewidth","pickerMaterial","visible","TransformGizmo","init","Object3D","handles","pickers","planes","add","planeGeometry","PlaneBufferGeometry","planeMaterial","DoubleSide","Mesh","activePlane","rotation","set","Math","PI","i","name","setupGizmos","gizmoMap","parent","length","object","position","handleGizmos","pickerGizmos","traverse","child","updateMatrix","tempGeometry","geometry","applyMatrix","matrix","scale","axis","material","update","eye","vec1","Vector3","vec2","lookAtMatrix","Matrix4","search","quaternion","setFromRotationMatrix","lookAt","setFromEuler","TransformGizmoTranslate","arrowGeometry","Geometry","mesh","CylinderGeometry","y","merge","lineXGeometry","BufferGeometry","addAttribute","Float32BufferAttribute","lineYGeometry","lineZGeometry","X","Line","Y","Z","XYZ","OctahedronGeometry","XY","YZ","XZ","CylinderBufferGeometry","setActivePlane","tempMatrix","applyMatrix4","getInverse","extractRotation","matrixWorld","abs","z","x","TransformGizmoRotate","CircleGeometry","radius","facing","arc","vertices","push","cos","sin","E","XYZE","TorusBufferGeometry","eye2","apply","arguments","worldRotation","Euler","tempQuaternion","Quaternion","unitX","unitY","unitZ","quaternionX","quaternionY","quaternionZ","makeRotationFromQuaternion","setFromAxisAngle","atan2","multiplyQuaternions","TransformGizmoScale","BoxGeometry","BoxBufferGeometry","TransformControls","camera","domElement","undefined","document","translationSnap","rotationSnap","space","size","scope","_mode","_dragging","_gizmo","type","gizmoObj","changeEvent","mouseDownEvent","mouseUpEvent","mode","objectChangeEvent","ray","Raycaster","pointerVector","Vector2","point","offset","offsetRotation","tempVector","quaternionXYZ","quaternionE","oldPosition","oldScale","oldRotationMatrix","parentRotationMatrix","parentScale","worldPosition","worldRotationMatrix","camPosition","camRotation","addEventListener","onPointerDown","onPointerHover","onPointerMove","onPointerUp","dispose","removeEventListener","attach","detach","getMode","setMode","dispatchEvent","setTranslationSnap","setRotationSnap","setSize","setSpace","updateMatrixWorld","setFromMatrixPosition","distanceTo","PerspectiveCamera","sub","normalize","OrthographicCamera","event","button","pointer","changedTouches","intersect","intersectObjects","children","preventDefault","stopPropagation","planeIntersect","setFromMatrixScale","multiply","round","max","cross","angleTo","window","TouchEvent","objects","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","setFromCamera","intersections"],"mappings":"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","file":"TransformControls.js","sourcesContent":["/**\n * @author arodic / https://github.com/arodic\n */\n\n( function () {\n\n    'use strict';\n\n    var GizmoMaterial = function ( parameters ) {\n\n        THREE.MeshBasicMaterial.call( this );\n\n        this.depthTest = false;\n        this.depthWrite = false;\n        this.side = THREE.FrontSide;\n        this.transparent = true;\n\n        this.setValues( parameters );\n\n        this.oldColor = this.color.clone();\n        this.oldOpacity = this.opacity;\n\n        this.highlight = function( highlighted ) {\n\n            if ( highlighted ) {\n\n                this.color.setRGB( 1, 1, 0 );\n                this.opacity = 1;\n\n            } else {\n\n                this.color.copy( this.oldColor );\n                this.opacity = this.oldOpacity;\n\n            }\n\n        };\n\n    };\n\n    GizmoMaterial.prototype = Object.create( THREE.MeshBasicMaterial.prototype );\n    GizmoMaterial.prototype.constructor = GizmoMaterial;\n\n\n    var GizmoLineMaterial = function ( parameters ) {\n\n        THREE.LineBasicMaterial.call( this );\n\n        this.depthTest = false;\n        this.depthWrite = false;\n        this.transparent = true;\n        this.linewidth = 1;\n\n        this.setValues( parameters );\n\n        this.oldColor = this.color.clone();\n        this.oldOpacity = this.opacity;\n\n        this.highlight = function( highlighted ) {\n\n            if ( highlighted ) {\n\n                this.color.setRGB( 1, 1, 0 );\n                this.opacity = 1;\n\n            } else {\n\n                this.color.copy( this.oldColor );\n                this.opacity = this.oldOpacity;\n\n            }\n\n        };\n\n    };\n\n    GizmoLineMaterial.prototype = Object.create( THREE.LineBasicMaterial.prototype );\n    GizmoLineMaterial.prototype.constructor = GizmoLineMaterial;\n\n\n    var pickerMaterial = new GizmoMaterial( { visible: false, transparent: false } );\n\n\n    THREE.TransformGizmo = function () {\n\n        this.init = function () {\n\n            THREE.Object3D.call( this );\n\n            this.handles = new THREE.Object3D();\n            this.pickers = new THREE.Object3D();\n            this.planes = new THREE.Object3D();\n\n            this.add( this.handles );\n            this.add( this.pickers );\n            this.add( this.planes );\n\n            //// PLANES\n\n            var planeGeometry = new THREE.PlaneBufferGeometry( 50, 50, 2, 2 );\n            var planeMaterial = new THREE.MeshBasicMaterial( { visible: false, side: THREE.DoubleSide } );\n\n            var planes = {\n                \"XY\":   new THREE.Mesh( planeGeometry, planeMaterial ),\n                \"YZ\":   new THREE.Mesh( planeGeometry, planeMaterial ),\n                \"XZ\":   new THREE.Mesh( planeGeometry, planeMaterial ),\n                \"XYZE\": new THREE.Mesh( planeGeometry, planeMaterial )\n            };\n\n            this.activePlane = planes[ \"XYZE\" ];\n\n            planes[ \"YZ\" ].rotation.set( 0, Math.PI / 2, 0 );\n            planes[ \"XZ\" ].rotation.set( - Math.PI / 2, 0, 0 );\n\n            for ( var i in planes ) {\n\n                planes[ i ].name = i;\n                this.planes.add( planes[ i ] );\n                this.planes[ i ] = planes[ i ];\n\n            }\n\n            //// HANDLES AND PICKERS\n\n            var setupGizmos = function( gizmoMap, parent ) {\n\n                for ( var name in gizmoMap ) {\n\n                    for ( i = gizmoMap[ name ].length; i --; ) {\n\n                        var object = gizmoMap[ name ][ i ][ 0 ];\n                        var position = gizmoMap[ name ][ i ][ 1 ];\n                        var rotation = gizmoMap[ name ][ i ][ 2 ];\n\n                        object.name = name;\n\n                        if ( position ) object.position.set( position[ 0 ], position[ 1 ], position[ 2 ] );\n                        if ( rotation ) object.rotation.set( rotation[ 0 ], rotation[ 1 ], rotation[ 2 ] );\n\n                        parent.add( object );\n\n                    }\n\n                }\n\n            };\n\n            setupGizmos( this.handleGizmos, this.handles );\n            setupGizmos( this.pickerGizmos, this.pickers );\n\n            // reset Transformations\n\n            this.traverse( function ( child ) {\n\n                if ( child instanceof THREE.Mesh ) {\n\n                    child.updateMatrix();\n\n                    var tempGeometry = child.geometry.clone();\n                    tempGeometry.applyMatrix( child.matrix );\n                    child.geometry = tempGeometry;\n\n                    child.position.set( 0, 0, 0 );\n                    child.rotation.set( 0, 0, 0 );\n                    child.scale.set( 1, 1, 1 );\n\n                }\n\n            } );\n\n        };\n\n        this.highlight = function ( axis ) {\n\n            this.traverse( function( child ) {\n\n                if ( child.material && child.material.highlight ) {\n\n                    if ( child.name === axis ) {\n\n                        child.material.highlight( true );\n\n                    } else {\n\n                        child.material.highlight( false );\n\n                    }\n\n                }\n\n            } );\n\n        };\n\n    };\n\n    THREE.TransformGizmo.prototype = Object.create( THREE.Object3D.prototype );\n    THREE.TransformGizmo.prototype.constructor = THREE.TransformGizmo;\n\n    THREE.TransformGizmo.prototype.update = function ( rotation, eye ) {\n\n        var vec1 = new THREE.Vector3( 0, 0, 0 );\n        var vec2 = new THREE.Vector3( 0, 1, 0 );\n        var lookAtMatrix = new THREE.Matrix4();\n\n        this.traverse( function( child ) {\n\n            if ( child.name.search( \"E\" ) !== - 1 ) {\n\n                child.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( eye, vec1, vec2 ) );\n\n            } else if ( child.name.search( \"X\" ) !== - 1 || child.name.search( \"Y\" ) !== - 1 || child.name.search( \"Z\" ) !== - 1 ) {\n\n                child.quaternion.setFromEuler( rotation );\n\n            }\n\n        } );\n\n    };\n\n    THREE.TransformGizmoTranslate = function () {\n\n        THREE.TransformGizmo.call( this );\n\n        var arrowGeometry = new THREE.Geometry();\n        var mesh = new THREE.Mesh( new THREE.CylinderGeometry( 0, 0.05, 0.2, 12, 1, false ) );\n        mesh.position.y = 0.5;\n        mesh.updateMatrix();\n\n        arrowGeometry.merge( mesh.geometry, mesh.matrix );\n\n        var lineXGeometry = new THREE.BufferGeometry();\n        lineXGeometry.addAttribute( 'position', new THREE.Float32BufferAttribute( [ 0, 0, 0,  1, 0, 0 ], 3 ) );\n\n        var lineYGeometry = new THREE.BufferGeometry();\n        lineYGeometry.addAttribute( 'position', new THREE.Float32BufferAttribute( [ 0, 0, 0,  0, 1, 0 ], 3 ) );\n\n        var lineZGeometry = new THREE.BufferGeometry();\n        lineZGeometry.addAttribute( 'position', new THREE.Float32BufferAttribute( [ 0, 0, 0,  0, 0, 1 ], 3 ) );\n\n        this.handleGizmos = {\n\n            X: [\n                [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0xff0000 } ) ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ] ],\n                [ new THREE.Line( lineXGeometry, new GizmoLineMaterial( { color: 0xff0000 } ) ) ]\n            ],\n\n            Y: [\n                [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x00ff00 } ) ), [ 0, 0.5, 0 ] ],\n                [\tnew THREE.Line( lineYGeometry, new GizmoLineMaterial( { color: 0x00ff00 } ) ) ]\n            ],\n\n            Z: [\n                [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x0000ff } ) ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ] ],\n                [ new THREE.Line( lineZGeometry, new GizmoLineMaterial( { color: 0x0000ff } ) ) ]\n            ],\n\n            XYZ: [\n                [ new THREE.Mesh( new THREE.OctahedronGeometry( 0.1, 0 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ 0, 0, 0 ] ]\n            ],\n\n            XY: [\n                [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0xffff00, opacity: 0.25 } ) ), [ 0.15, 0.15, 0 ] ]\n            ],\n\n            YZ: [\n                [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0x00ffff, opacity: 0.25 } ) ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ] ]\n            ],\n\n            XZ: [\n                [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0xff00ff, opacity: 0.25 } ) ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ] ]\n            ]\n\n        };\n\n        this.pickerGizmos = {\n\n            X: [\n                [ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), pickerMaterial ), [ 0.6, 0, 0 ], [ 0, 0, - Math.PI / 2 ] ]\n            ],\n\n            Y: [\n                [ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), pickerMaterial ), [ 0, 0.6, 0 ] ]\n            ],\n\n            Z: [\n                [ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), pickerMaterial ), [ 0, 0, 0.6 ], [ Math.PI / 2, 0, 0 ] ]\n            ],\n\n            XYZ: [\n                [ new THREE.Mesh( new THREE.OctahedronGeometry( 0.2, 0 ), pickerMaterial ) ]\n            ],\n\n            XY: [\n                [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), pickerMaterial ), [ 0.2, 0.2, 0 ] ]\n            ],\n\n            YZ: [\n                [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), pickerMaterial ), [ 0, 0.2, 0.2 ], [ 0, Math.PI / 2, 0 ] ]\n            ],\n\n            XZ: [\n                [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), pickerMaterial ), [ 0.2, 0, 0.2 ], [ - Math.PI / 2, 0, 0 ] ]\n            ]\n\n        };\n\n        this.setActivePlane = function ( axis, eye ) {\n\n            var tempMatrix = new THREE.Matrix4();\n            eye.applyMatrix4( tempMatrix.getInverse( tempMatrix.extractRotation( this.planes[ \"XY\" ].matrixWorld ) ) );\n\n            if ( axis === \"X\" ) {\n\n                this.activePlane = this.planes[ \"XY\" ];\n\n                if ( Math.abs( eye.y ) > Math.abs( eye.z ) ) this.activePlane = this.planes[ \"XZ\" ];\n\n            }\n\n            if ( axis === \"Y\" ) {\n\n                this.activePlane = this.planes[ \"XY\" ];\n\n                if ( Math.abs( eye.x ) > Math.abs( eye.z ) ) this.activePlane = this.planes[ \"YZ\" ];\n\n            }\n\n            if ( axis === \"Z\" ) {\n\n                this.activePlane = this.planes[ \"XZ\" ];\n\n                if ( Math.abs( eye.x ) > Math.abs( eye.y ) ) this.activePlane = this.planes[ \"YZ\" ];\n\n            }\n\n            if ( axis === \"XYZ\" ) this.activePlane = this.planes[ \"XYZE\" ];\n\n            if ( axis === \"XY\" ) this.activePlane = this.planes[ \"XY\" ];\n\n            if ( axis === \"YZ\" ) this.activePlane = this.planes[ \"YZ\" ];\n\n            if ( axis === \"XZ\" ) this.activePlane = this.planes[ \"XZ\" ];\n\n        };\n\n        this.init();\n\n    };\n\n    THREE.TransformGizmoTranslate.prototype = Object.create( THREE.TransformGizmo.prototype );\n    THREE.TransformGizmoTranslate.prototype.constructor = THREE.TransformGizmoTranslate;\n\n    THREE.TransformGizmoRotate = function () {\n\n        THREE.TransformGizmo.call( this );\n\n        var CircleGeometry = function ( radius, facing, arc ) {\n\n            var geometry = new THREE.BufferGeometry();\n            var vertices = [];\n            arc = arc ? arc : 1;\n\n            for ( var i = 0; i <= 64 * arc; ++ i ) {\n\n                if ( facing === 'x' ) vertices.push( 0, Math.cos( i / 32 * Math.PI ) * radius, Math.sin( i / 32 * Math.PI ) * radius );\n                if ( facing === 'y' ) vertices.push( Math.cos( i / 32 * Math.PI ) * radius, 0, Math.sin( i / 32 * Math.PI ) * radius );\n                if ( facing === 'z' ) vertices.push( Math.sin( i / 32 * Math.PI ) * radius, Math.cos( i / 32 * Math.PI ) * radius, 0 );\n\n            }\n\n            geometry.addAttribute( 'position', new THREE.Float32BufferAttribute( vertices, 3 ) );\n            return geometry;\n\n        };\n\n        this.handleGizmos = {\n\n            X: [\n                [ new THREE.Line( new CircleGeometry( 1, 'x', 0.5 ), new GizmoLineMaterial( { color: 0xff0000 } ) ) ]\n            ],\n\n            Y: [\n                [ new THREE.Line( new CircleGeometry( 1, 'y', 0.5 ), new GizmoLineMaterial( { color: 0x00ff00 } ) ) ]\n            ],\n\n            Z: [\n                [ new THREE.Line( new CircleGeometry( 1, 'z', 0.5 ), new GizmoLineMaterial( { color: 0x0000ff } ) ) ]\n            ],\n\n            E: [\n                [ new THREE.Line( new CircleGeometry( 1.25, 'z', 1 ), new GizmoLineMaterial( { color: 0xcccc00 } ) ) ]\n            ],\n\n            XYZE: [\n                [ new THREE.Line( new CircleGeometry( 1, 'z', 1 ), new GizmoLineMaterial( { color: 0x787878 } ) ) ]\n            ]\n\n        };\n\n        this.pickerGizmos = {\n\n            X: [\n                [ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.12, 4, 12, Math.PI ), pickerMaterial ), [ 0, 0, 0 ], [ 0, - Math.PI / 2, - Math.PI / 2 ] ]\n            ],\n\n            Y: [\n                [ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.12, 4, 12, Math.PI ), pickerMaterial ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ] ]\n            ],\n\n            Z: [\n                [ new THREE.Mesh( new THREE.TorusBufferGeometry( 1, 0.12, 4, 12, Math.PI ), pickerMaterial ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ] ]\n            ],\n\n            E: [\n                [ new THREE.Mesh( new THREE.TorusBufferGeometry( 1.25, 0.12, 2, 24 ), pickerMaterial ) ]\n            ],\n\n            XYZE: [\n                [ new THREE.Mesh() ]// TODO\n            ]\n\n        };\n\n        this.setActivePlane = function ( axis ) {\n\n            if ( axis === \"E\" ) this.activePlane = this.planes[ \"XYZE\" ];\n\n            if ( axis === \"X\" ) this.activePlane = this.planes[ \"YZ\" ];\n\n            if ( axis === \"Y\" ) this.activePlane = this.planes[ \"XZ\" ];\n\n            if ( axis === \"Z\" ) this.activePlane = this.planes[ \"XY\" ];\n\n        };\n\n        this.update = function ( rotation, eye2 ) {\n\n            THREE.TransformGizmo.prototype.update.apply( this, arguments );\n\n            var tempMatrix = new THREE.Matrix4();\n            var worldRotation = new THREE.Euler( 0, 0, 1 );\n            var tempQuaternion = new THREE.Quaternion();\n            var unitX = new THREE.Vector3( 1, 0, 0 );\n            var unitY = new THREE.Vector3( 0, 1, 0 );\n            var unitZ = new THREE.Vector3( 0, 0, 1 );\n            var quaternionX = new THREE.Quaternion();\n            var quaternionY = new THREE.Quaternion();\n            var quaternionZ = new THREE.Quaternion();\n            var eye = eye2.clone();\n\n            worldRotation.copy( this.planes[ \"XY\" ].rotation );\n            tempQuaternion.setFromEuler( worldRotation );\n\n            tempMatrix.makeRotationFromQuaternion( tempQuaternion ).getInverse( tempMatrix );\n            eye.applyMatrix4( tempMatrix );\n\n            this.traverse( function( child ) {\n\n                tempQuaternion.setFromEuler( worldRotation );\n\n                if ( child.name === \"X\" ) {\n\n                    quaternionX.setFromAxisAngle( unitX, Math.atan2( - eye.y, eye.z ) );\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n                    child.quaternion.copy( tempQuaternion );\n\n                }\n\n                if ( child.name === \"Y\" ) {\n\n                    quaternionY.setFromAxisAngle( unitY, Math.atan2( eye.x, eye.z ) );\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionY );\n                    child.quaternion.copy( tempQuaternion );\n\n                }\n\n                if ( child.name === \"Z\" ) {\n\n                    quaternionZ.setFromAxisAngle( unitZ, Math.atan2( eye.y, eye.x ) );\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionZ );\n                    child.quaternion.copy( tempQuaternion );\n\n                }\n\n            } );\n\n        };\n\n        this.init();\n\n    };\n\n    THREE.TransformGizmoRotate.prototype = Object.create( THREE.TransformGizmo.prototype );\n    THREE.TransformGizmoRotate.prototype.constructor = THREE.TransformGizmoRotate;\n\n    THREE.TransformGizmoScale = function () {\n\n        THREE.TransformGizmo.call( this );\n\n        var arrowGeometry = new THREE.Geometry();\n        var mesh = new THREE.Mesh( new THREE.BoxGeometry( 0.125, 0.125, 0.125 ) );\n        mesh.position.y = 0.5;\n        mesh.updateMatrix();\n\n        arrowGeometry.merge( mesh.geometry, mesh.matrix );\n\n        var lineXGeometry = new THREE.BufferGeometry();\n        lineXGeometry.addAttribute( 'position', new THREE.Float32BufferAttribute( [ 0, 0, 0,  1, 0, 0 ], 3 ) );\n\n        var lineYGeometry = new THREE.BufferGeometry();\n        lineYGeometry.addAttribute( 'position', new THREE.Float32BufferAttribute( [ 0, 0, 0,  0, 1, 0 ], 3 ) );\n\n        var lineZGeometry = new THREE.BufferGeometry();\n        lineZGeometry.addAttribute( 'position', new THREE.Float32BufferAttribute( [ 0, 0, 0,  0, 0, 1 ], 3 ) );\n\n        this.handleGizmos = {\n\n            X: [\n                [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0xff0000 } ) ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ] ],\n                [ new THREE.Line( lineXGeometry, new GizmoLineMaterial( { color: 0xff0000 } ) ) ]\n            ],\n\n            Y: [\n                [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x00ff00 } ) ), [ 0, 0.5, 0 ] ],\n                [ new THREE.Line( lineYGeometry, new GizmoLineMaterial( { color: 0x00ff00 } ) ) ]\n            ],\n\n            Z: [\n                [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x0000ff } ) ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ] ],\n                [ new THREE.Line( lineZGeometry, new GizmoLineMaterial( { color: 0x0000ff } ) ) ]\n            ],\n\n            XYZ: [\n                [ new THREE.Mesh( new THREE.BoxBufferGeometry( 0.125, 0.125, 0.125 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ) ]\n            ]\n\n        };\n\n        this.pickerGizmos = {\n\n            X: [\n                [ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), pickerMaterial ), [ 0.6, 0, 0 ], [ 0, 0, - Math.PI / 2 ] ]\n            ],\n\n            Y: [\n                [ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), pickerMaterial ), [ 0, 0.6, 0 ] ]\n            ],\n\n            Z: [\n                [ new THREE.Mesh( new THREE.CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), pickerMaterial ), [ 0, 0, 0.6 ], [ Math.PI / 2, 0, 0 ] ]\n            ],\n\n            XYZ: [\n                [ new THREE.Mesh( new THREE.BoxBufferGeometry( 0.4, 0.4, 0.4 ), pickerMaterial ) ]\n            ]\n\n        };\n\n        this.setActivePlane = function ( axis, eye ) {\n\n            var tempMatrix = new THREE.Matrix4();\n            eye.applyMatrix4( tempMatrix.getInverse( tempMatrix.extractRotation( this.planes[ \"XY\" ].matrixWorld ) ) );\n\n            if ( axis === \"X\" ) {\n\n                this.activePlane = this.planes[ \"XY\" ];\n                if ( Math.abs( eye.y ) > Math.abs( eye.z ) ) this.activePlane = this.planes[ \"XZ\" ];\n\n            }\n\n            if ( axis === \"Y\" ) {\n\n                this.activePlane = this.planes[ \"XY\" ];\n                if ( Math.abs( eye.x ) > Math.abs( eye.z ) ) this.activePlane = this.planes[ \"YZ\" ];\n\n            }\n\n            if ( axis === \"Z\" ) {\n\n                this.activePlane = this.planes[ \"XZ\" ];\n                if ( Math.abs( eye.x ) > Math.abs( eye.y ) ) this.activePlane = this.planes[ \"YZ\" ];\n\n            }\n\n            if ( axis === \"XYZ\" ) this.activePlane = this.planes[ \"XYZE\" ];\n\n        };\n\n        this.init();\n\n    };\n\n    THREE.TransformGizmoScale.prototype = Object.create( THREE.TransformGizmo.prototype );\n    THREE.TransformGizmoScale.prototype.constructor = THREE.TransformGizmoScale;\n\n    THREE.TransformControls = function ( camera, domElement ) {\n\n        // TODO: Make non-uniform scale and rotate play nice in hierarchies\n        // TODO: ADD RXYZ contol\n\n        THREE.Object3D.call( this );\n\n        domElement = ( domElement !== undefined ) ? domElement : document;\n\n        this.object = undefined;\n        this.visible = false;\n        this.translationSnap = null;\n        this.rotationSnap = null;\n        this.space = \"world\";\n        this.size = 1;\n        this.axis = null;\n\n        var scope = this;\n\n        var _mode = \"translate\";\n        var _dragging = false;\n        var _gizmo = {\n\n            \"translate\": new THREE.TransformGizmoTranslate(),\n            \"rotate\": new THREE.TransformGizmoRotate(),\n            \"scale\": new THREE.TransformGizmoScale()\n        };\n\n        for ( var type in _gizmo ) {\n\n            var gizmoObj = _gizmo[ type ];\n\n            gizmoObj.visible = ( type === _mode );\n            this.add( gizmoObj );\n\n        }\n\n        var changeEvent = { type: \"change\" };\n        var mouseDownEvent = { type: \"mouseDown\" };\n        var mouseUpEvent = { type: \"mouseUp\", mode: _mode };\n        var objectChangeEvent = { type: \"objectChange\" };\n\n        var ray = new THREE.Raycaster();\n        var pointerVector = new THREE.Vector2();\n\n        var point = new THREE.Vector3();\n        var offset = new THREE.Vector3();\n\n        var rotation = new THREE.Vector3();\n        var offsetRotation = new THREE.Vector3();\n        var scale = 1;\n\n        var lookAtMatrix = new THREE.Matrix4();\n        var eye = new THREE.Vector3();\n\n        var tempMatrix = new THREE.Matrix4();\n        var tempVector = new THREE.Vector3();\n        var tempQuaternion = new THREE.Quaternion();\n        var unitX = new THREE.Vector3( 1, 0, 0 );\n        var unitY = new THREE.Vector3( 0, 1, 0 );\n        var unitZ = new THREE.Vector3( 0, 0, 1 );\n\n        var quaternionXYZ = new THREE.Quaternion();\n        var quaternionX = new THREE.Quaternion();\n        var quaternionY = new THREE.Quaternion();\n        var quaternionZ = new THREE.Quaternion();\n        var quaternionE = new THREE.Quaternion();\n\n        var oldPosition = new THREE.Vector3();\n        var oldScale = new THREE.Vector3();\n        var oldRotationMatrix = new THREE.Matrix4();\n\n        var parentRotationMatrix  = new THREE.Matrix4();\n        var parentScale = new THREE.Vector3();\n\n        var worldPosition = new THREE.Vector3();\n        var worldRotation = new THREE.Euler();\n        var worldRotationMatrix  = new THREE.Matrix4();\n        var camPosition = new THREE.Vector3();\n        var camRotation = new THREE.Euler();\n\n        domElement.addEventListener( \"mousedown\", onPointerDown, false );\n        domElement.addEventListener( \"touchstart\", onPointerDown, false );\n\n        domElement.addEventListener( \"mousemove\", onPointerHover, false );\n        domElement.addEventListener( \"touchmove\", onPointerHover, false );\n\n        domElement.addEventListener( \"mousemove\", onPointerMove, false );\n        domElement.addEventListener( \"touchmove\", onPointerMove, false );\n\n        domElement.addEventListener( \"mouseup\", onPointerUp, false );\n        domElement.addEventListener( \"mouseout\", onPointerUp, false );\n        domElement.addEventListener( \"touchend\", onPointerUp, false );\n        domElement.addEventListener( \"touchcancel\", onPointerUp, false );\n        domElement.addEventListener( \"touchleave\", onPointerUp, false );\n\n        this.dispose = function () {\n\n            domElement.removeEventListener( \"mousedown\", onPointerDown );\n            domElement.removeEventListener( \"touchstart\", onPointerDown );\n\n            domElement.removeEventListener( \"mousemove\", onPointerHover );\n            domElement.removeEventListener( \"touchmove\", onPointerHover );\n\n            domElement.removeEventListener( \"mousemove\", onPointerMove );\n            domElement.removeEventListener( \"touchmove\", onPointerMove );\n\n            domElement.removeEventListener( \"mouseup\", onPointerUp );\n            domElement.removeEventListener( \"mouseout\", onPointerUp );\n            domElement.removeEventListener( \"touchend\", onPointerUp );\n            domElement.removeEventListener( \"touchcancel\", onPointerUp );\n            domElement.removeEventListener( \"touchleave\", onPointerUp );\n\n        };\n\n        this.attach = function ( object ) {\n\n            this.object = object;\n            this.visible = true;\n            this.update();\n\n        };\n\n        this.detach = function () {\n\n            this.object = undefined;\n            this.visible = false;\n            this.axis = null;\n\n        };\n\n        this.getMode = function () {\n\n            return _mode;\n\n        };\n\n        this.setMode = function ( mode ) {\n\n            _mode = mode ? mode : _mode;\n\n            if ( _mode === \"scale\" ) scope.space = \"local\";\n\n            for ( var type in _gizmo ) _gizmo[ type ].visible = ( type === _mode );\n\n            this.update();\n            scope.dispatchEvent( changeEvent );\n\n        };\n\n        this.setTranslationSnap = function ( translationSnap ) {\n\n            scope.translationSnap = translationSnap;\n\n        };\n\n        this.setRotationSnap = function ( rotationSnap ) {\n\n            scope.rotationSnap = rotationSnap;\n\n        };\n\n        this.setSize = function ( size ) {\n\n            scope.size = size;\n            this.update();\n            scope.dispatchEvent( changeEvent );\n\n        };\n\n        this.setSpace = function ( space ) {\n\n            scope.space = space;\n            this.update();\n            scope.dispatchEvent( changeEvent );\n\n        };\n\n        this.update = function () {\n\n            if ( scope.object === undefined ) return;\n\n            scope.object.updateMatrixWorld();\n            worldPosition.setFromMatrixPosition( scope.object.matrixWorld );\n            worldRotation.setFromRotationMatrix( tempMatrix.extractRotation( scope.object.matrixWorld ) );\n\n            camera.updateMatrixWorld();\n            camPosition.setFromMatrixPosition( camera.matrixWorld );\n            camRotation.setFromRotationMatrix( tempMatrix.extractRotation( camera.matrixWorld ) );\n\n            scale = worldPosition.distanceTo( camPosition ) / 6 * scope.size;\n            this.position.copy( worldPosition );\n            this.scale.set( scale, scale, scale );\n\n            if ( camera instanceof THREE.PerspectiveCamera ) {\n\n                eye.copy( camPosition ).sub( worldPosition ).normalize();\n\n            } else if ( camera instanceof THREE.OrthographicCamera ) {\n\n                eye.copy( camPosition ).normalize();\n\n            }\n\n            if ( scope.space === \"local\" ) {\n\n                _gizmo[ _mode ].update( worldRotation, eye );\n\n            } else if ( scope.space === \"world\" ) {\n\n                _gizmo[ _mode ].update( new THREE.Euler(), eye );\n\n            }\n\n            _gizmo[ _mode ].highlight( scope.axis );\n\n        };\n\n        function onPointerHover( event ) {\n\n            if ( scope.object === undefined || _dragging === true || ( event.button !== undefined && event.button !== 0 ) ) return;\n\n            var pointer = event.changedTouches ? event.changedTouches[ 0 ] : event;\n\n            var intersect = intersectObjects( pointer, _gizmo[ _mode ].pickers.children );\n\n            var axis = null;\n\n            if ( intersect ) {\n\n                axis = intersect.object.name;\n\n                event.preventDefault();\n\n            }\n\n            if ( scope.axis !== axis ) {\n\n                scope.axis = axis;\n                scope.update();\n                scope.dispatchEvent( changeEvent );\n\n            }\n\n        }\n\n        function onPointerDown( event ) {\n\n            if ( scope.object === undefined || _dragging === true || ( event.button !== undefined && event.button !== 0 ) ) return;\n\n            var pointer = event.changedTouches ? event.changedTouches[ 0 ] : event;\n\n            if ( pointer.button === 0 || pointer.button === undefined ) {\n\n                var intersect = intersectObjects( pointer, _gizmo[ _mode ].pickers.children );\n\n                if ( intersect ) {\n\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    scope.dispatchEvent( mouseDownEvent );\n\n                    scope.axis = intersect.object.name;\n\n                    scope.update();\n\n                    eye.copy( camPosition ).sub( worldPosition ).normalize();\n\n                    _gizmo[ _mode ].setActivePlane( scope.axis, eye );\n\n                    var planeIntersect = intersectObjects( pointer, [ _gizmo[ _mode ].activePlane ] );\n\n                    if ( planeIntersect ) {\n\n                        oldPosition.copy( scope.object.position );\n                        oldScale.copy( scope.object.scale );\n\n                        oldRotationMatrix.extractRotation( scope.object.matrix );\n                        worldRotationMatrix.extractRotation( scope.object.matrixWorld );\n\n                        parentRotationMatrix.extractRotation( scope.object.parent.matrixWorld );\n                        parentScale.setFromMatrixScale( tempMatrix.getInverse( scope.object.parent.matrixWorld ) );\n\n                        offset.copy( planeIntersect.point );\n\n                    }\n\n                }\n\n            }\n\n            _dragging = true;\n\n        }\n\n        function onPointerMove( event ) {\n\n            if ( scope.object === undefined || scope.axis === null || _dragging === false || ( event.button !== undefined && event.button !== 0 ) ) return;\n\n            var pointer = event.changedTouches ? event.changedTouches[ 0 ] : event;\n\n            var planeIntersect = intersectObjects( pointer, [ _gizmo[ _mode ].activePlane ] );\n\n            if ( planeIntersect === false ) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            point.copy( planeIntersect.point );\n\n            if ( _mode === \"translate\" ) {\n\n                point.sub( offset );\n                point.multiply( parentScale );\n\n                if ( scope.space === \"local\" ) {\n\n                    point.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n                    if ( scope.axis.search( \"X\" ) === - 1 ) point.x = 0;\n                    if ( scope.axis.search( \"Y\" ) === - 1 ) point.y = 0;\n                    if ( scope.axis.search( \"Z\" ) === - 1 ) point.z = 0;\n\n                    point.applyMatrix4( oldRotationMatrix );\n\n                    scope.object.position.copy( oldPosition );\n                    scope.object.position.add( point );\n\n                }\n\n                if ( scope.space === \"world\" || scope.axis.search( \"XYZ\" ) !== - 1 ) {\n\n                    if ( scope.axis.search( \"X\" ) === - 1 ) point.x = 0;\n                    if ( scope.axis.search( \"Y\" ) === - 1 ) point.y = 0;\n                    if ( scope.axis.search( \"Z\" ) === - 1 ) point.z = 0;\n\n                    point.applyMatrix4( tempMatrix.getInverse( parentRotationMatrix ) );\n\n                    scope.object.position.copy( oldPosition );\n                    scope.object.position.add( point );\n\n                }\n\n                if ( scope.translationSnap !== null ) {\n\n                    if ( scope.space === \"local\" ) {\n\n                        scope.object.position.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n                    }\n\n                    if ( scope.axis.search( \"X\" ) !== - 1 ) scope.object.position.x = Math.round( scope.object.position.x / scope.translationSnap ) * scope.translationSnap;\n                    if ( scope.axis.search( \"Y\" ) !== - 1 ) scope.object.position.y = Math.round( scope.object.position.y / scope.translationSnap ) * scope.translationSnap;\n                    if ( scope.axis.search( \"Z\" ) !== - 1 ) scope.object.position.z = Math.round( scope.object.position.z / scope.translationSnap ) * scope.translationSnap;\n\n                    if ( scope.space === \"local\" ) {\n\n                        scope.object.position.applyMatrix4( worldRotationMatrix );\n\n                    }\n\n                }\n\n            } else if ( _mode === \"scale\" ) {\n\n                point.sub( offset );\n                point.multiply( parentScale );\n\n                if ( scope.space === \"local\" ) {\n\n                    if ( scope.axis === \"XYZ\" ) {\n\n                        scale = 1 + ( ( point.y ) / Math.max( oldScale.x, oldScale.y, oldScale.z ) );\n\n                        scope.object.scale.x = oldScale.x * scale;\n                        scope.object.scale.y = oldScale.y * scale;\n                        scope.object.scale.z = oldScale.z * scale;\n\n                    } else {\n\n                        point.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n                        if ( scope.axis === \"X\" ) scope.object.scale.x = oldScale.x * ( 1 + point.x / oldScale.x );\n                        if ( scope.axis === \"Y\" ) scope.object.scale.y = oldScale.y * ( 1 + point.y / oldScale.y );\n                        if ( scope.axis === \"Z\" ) scope.object.scale.z = oldScale.z * ( 1 + point.z / oldScale.z );\n\n                    }\n\n                }\n\n            } else if ( _mode === \"rotate\" ) {\n\n                point.sub( worldPosition );\n                point.multiply( parentScale );\n                tempVector.copy( offset ).sub( worldPosition );\n                tempVector.multiply( parentScale );\n\n                if ( scope.axis === \"E\" ) {\n\n                    point.applyMatrix4( tempMatrix.getInverse( lookAtMatrix ) );\n                    tempVector.applyMatrix4( tempMatrix.getInverse( lookAtMatrix ) );\n\n                    rotation.set( Math.atan2( point.z, point.y ), Math.atan2( point.x, point.z ), Math.atan2( point.y, point.x ) );\n                    offsetRotation.set( Math.atan2( tempVector.z, tempVector.y ), Math.atan2( tempVector.x, tempVector.z ), Math.atan2( tempVector.y, tempVector.x ) );\n\n                    tempQuaternion.setFromRotationMatrix( tempMatrix.getInverse( parentRotationMatrix ) );\n\n                    quaternionE.setFromAxisAngle( eye, rotation.z - offsetRotation.z );\n                    quaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\n\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionE );\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\n\n                    scope.object.quaternion.copy( tempQuaternion );\n\n                } else if ( scope.axis === \"XYZE\" ) {\n\n                    quaternionE.setFromEuler( point.clone().cross( tempVector ).normalize() ); // rotation axis\n\n                    tempQuaternion.setFromRotationMatrix( tempMatrix.getInverse( parentRotationMatrix ) );\n                    quaternionX.setFromAxisAngle( quaternionE, - point.clone().angleTo( tempVector ) );\n                    quaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\n\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\n\n                    scope.object.quaternion.copy( tempQuaternion );\n\n                } else if ( scope.space === \"local\" ) {\n\n                    point.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n                    tempVector.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n                    rotation.set( Math.atan2( point.z, point.y ), Math.atan2( point.x, point.z ), Math.atan2( point.y, point.x ) );\n                    offsetRotation.set( Math.atan2( tempVector.z, tempVector.y ), Math.atan2( tempVector.x, tempVector.z ), Math.atan2( tempVector.y, tempVector.x ) );\n\n                    quaternionXYZ.setFromRotationMatrix( oldRotationMatrix );\n\n                    if ( scope.rotationSnap !== null ) {\n\n                        quaternionX.setFromAxisAngle( unitX, Math.round( ( rotation.x - offsetRotation.x ) / scope.rotationSnap ) * scope.rotationSnap );\n                        quaternionY.setFromAxisAngle( unitY, Math.round( ( rotation.y - offsetRotation.y ) / scope.rotationSnap ) * scope.rotationSnap );\n                        quaternionZ.setFromAxisAngle( unitZ, Math.round( ( rotation.z - offsetRotation.z ) / scope.rotationSnap ) * scope.rotationSnap );\n\n                    } else {\n\n                        quaternionX.setFromAxisAngle( unitX, rotation.x - offsetRotation.x );\n                        quaternionY.setFromAxisAngle( unitY, rotation.y - offsetRotation.y );\n                        quaternionZ.setFromAxisAngle( unitZ, rotation.z - offsetRotation.z );\n\n                    }\n\n                    if ( scope.axis === \"X\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionX );\n                    if ( scope.axis === \"Y\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionY );\n                    if ( scope.axis === \"Z\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionZ );\n\n                    scope.object.quaternion.copy( quaternionXYZ );\n\n                } else if ( scope.space === \"world\" ) {\n\n                    rotation.set( Math.atan2( point.z, point.y ), Math.atan2( point.x, point.z ), Math.atan2( point.y, point.x ) );\n                    offsetRotation.set( Math.atan2( tempVector.z, tempVector.y ), Math.atan2( tempVector.x, tempVector.z ), Math.atan2( tempVector.y, tempVector.x ) );\n\n                    tempQuaternion.setFromRotationMatrix( tempMatrix.getInverse( parentRotationMatrix ) );\n\n                    if ( scope.rotationSnap !== null ) {\n\n                        quaternionX.setFromAxisAngle( unitX, Math.round( ( rotation.x - offsetRotation.x ) / scope.rotationSnap ) * scope.rotationSnap );\n                        quaternionY.setFromAxisAngle( unitY, Math.round( ( rotation.y - offsetRotation.y ) / scope.rotationSnap ) * scope.rotationSnap );\n                        quaternionZ.setFromAxisAngle( unitZ, Math.round( ( rotation.z - offsetRotation.z ) / scope.rotationSnap ) * scope.rotationSnap );\n\n                    } else {\n\n                        quaternionX.setFromAxisAngle( unitX, rotation.x - offsetRotation.x );\n                        quaternionY.setFromAxisAngle( unitY, rotation.y - offsetRotation.y );\n                        quaternionZ.setFromAxisAngle( unitZ, rotation.z - offsetRotation.z );\n\n                    }\n\n                    quaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\n\n                    if ( scope.axis === \"X\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n                    if ( scope.axis === \"Y\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionY );\n                    if ( scope.axis === \"Z\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionZ );\n\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\n\n                    scope.object.quaternion.copy( tempQuaternion );\n\n                }\n\n            }\n\n            scope.update();\n            scope.dispatchEvent( changeEvent );\n            scope.dispatchEvent( objectChangeEvent );\n\n        }\n\n        function onPointerUp( event ) {\n\n            event.preventDefault(); // Prevent MouseEvent on mobile\n\n            if ( event.button !== undefined && event.button !== 0 ) return;\n\n            if ( _dragging && ( scope.axis !== null ) ) {\n\n                mouseUpEvent.mode = _mode;\n                scope.dispatchEvent( mouseUpEvent );\n\n            }\n\n            _dragging = false;\n\n            if ( 'TouchEvent' in window && event instanceof TouchEvent ) {\n\n                // Force \"rollover\"\n\n                scope.axis = null;\n                scope.update();\n                scope.dispatchEvent( changeEvent );\n\n            } else {\n\n                onPointerHover( event );\n\n            }\n\n        }\n\n        function intersectObjects( pointer, objects ) {\n\n            var rect = domElement.getBoundingClientRect();\n            var x = ( pointer.clientX - rect.left ) / rect.width;\n            var y = ( pointer.clientY - rect.top ) / rect.height;\n\n            pointerVector.set( ( x * 2 ) - 1, - ( y * 2 ) + 1 );\n            ray.setFromCamera( pointerVector, camera );\n\n            var intersections = ray.intersectObjects( objects, true );\n            return intersections[ 0 ] ? intersections[ 0 ] : false;\n\n        }\n\n    };\n\n    THREE.TransformControls.prototype = Object.create( THREE.Object3D.prototype );\n    THREE.TransformControls.prototype.constructor = THREE.TransformControls;\n\n}() );\n"]}